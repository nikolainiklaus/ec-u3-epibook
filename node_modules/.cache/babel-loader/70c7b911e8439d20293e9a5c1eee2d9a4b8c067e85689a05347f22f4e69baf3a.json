{"ast":null,"code":"var _jsxFileName = \"/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/AddComment.jsx\";\nimport React, { useState } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\n// const AddComment = ({ bookId, onCommentAdded }) => {\n//   const [comment, setText] = useState(\"\");\n//   const [rate, setRating] = useState(0);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const response = await fetch(\n//       `https://striveschool-api.herokuapp.com/api/comments/`,\n//       {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization:\n//             \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc\",\n//         },\n//         body: JSON.stringify({\n//           comment,\n//           rate,\n//           bookId,\n//         }),\n//       }\n//     );\n\n//     if (response.ok) {\n//       const newComment = await response.json();\n//       onCommentAdded(newComment);\n//     }\n//     console.log(bookId);\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={comment}\n//         onChange={(event) => setText(event.target.value)}\n//       />\n//       <input\n//         type=\"number\"\n//         min=\"1\"\n//         max=\"5\"\n//         value={rate}\n//         onChange={(event) => setRating(event.target.value)}\n//       />\n//       <button type=\"submit\">Add Comment</button>\n//     </form>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddComment extends Comment {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      commentMain: {\n        comment: \"\",\n        rate: \"3\",\n        elementId: this.props.id\n      }\n    };\n    this.setComment = newComment => {\n      console.log(newComment);\n      this.setState({\n        commentMain: {\n          ...this.state.commentMain,\n          comment: newComment\n        }\n      });\n    };\n    this.submitComment = async () => {\n      try {\n        const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/`, {\n          method: \"POST\",\n          body: JSON.stringify(this.state.commentMain),\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M2NzE5MDU3YjMwZDAwMTVkNzU5YjMiLCJpYXQiOjE2NzM5NDk1ODQsImV4cCI6MTY3NTE1OTE4NH0.2d7gSCxqL3b9vDvcnz-ZxmJsG28rK2IOSjlw4blGu2c\"\n          }\n        });\n        if (response.ok) {\n          alert(\"data saved successfully\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          onClick: this.submitComment,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          \"aria-label\": \"With textarea\",\n          onChange: event => {\n            this.setComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default AddComment;","map":{"version":3,"names":["React","useState","Form","InputGroup","AddComment","Comment","state","commentMain","comment","rate","elementId","props","id","setComment","newComment","console","log","setState","submitComment","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","e","render","event","target","value"],"sources":["/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/AddComment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\"\n\n\n// const AddComment = ({ bookId, onCommentAdded }) => {\n//   const [comment, setText] = useState(\"\");\n//   const [rate, setRating] = useState(0);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const response = await fetch(\n//       `https://striveschool-api.herokuapp.com/api/comments/`,\n//       {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization:\n//             \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc\",\n//         },\n//         body: JSON.stringify({\n//           comment,\n//           rate,\n//           bookId,\n//         }),\n//       }\n//     );\n\n//     if (response.ok) {\n//       const newComment = await response.json();\n//       onCommentAdded(newComment);\n//     }\n//     console.log(bookId);\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <textarea\n//         value={comment}\n//         onChange={(event) => setText(event.target.value)}\n//       />\n//       <input\n//         type=\"number\"\n//         min=\"1\"\n//         max=\"5\"\n//         value={rate}\n//         onChange={(event) => setRating(event.target.value)}\n//       />\n//       <button type=\"submit\">Add Comment</button>\n//     </form>\n//   );\n// };\n\n\nexport class AddComment extends Comment {\nstate = {\n    commentMain: {\n      comment: \"\",\n      rate: \"3\",\n      elementId: this.props.id,\n    },\n  }\n\n  setComment = (newComment) => {\n    console.log(newComment)\n    this.setState({\n      commentMain: {\n        ...this.state.commentMain,\n        comment: newComment,\n      },\n    })\n  }\n\n  submitComment = async () => {\n    try {\n      const response = await fetch(\n        `https://striveschool-api.herokuapp.com/api/comments/`,\n\n        {\n          method: \"POST\",\n          body: JSON.stringify(this.state.commentMain),\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization:\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M2NzE5MDU3YjMwZDAwMTVkNzU5YjMiLCJpYXQiOjE2NzM5NDk1ODQsImV4cCI6MTY3NTE1OTE4NH0.2d7gSCxqL3b9vDvcnz-ZxmJsG28rK2IOSjlw4blGu2c\",\n          },\n        }\n      )\n      if (response.ok) {\n        alert(\"data saved successfully\")\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <InputGroup>\n          <InputGroup.Text onClick={this.submitComment}>Enter</InputGroup.Text>\n          <Form.Control\n            as=\"textarea\"\n            aria-label=\"With textarea\"\n            onChange={(event) => {\n              this.setComment(event.target.value)\n            }}\n          />\n        </InputGroup>\n      </div>\n    )\n  }\n}\n\nexport default AddComment;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;;AAGlD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA,OAAO,MAAMC,UAAU,SAASC,OAAO,CAAC;EAAA;IAAA;IAAA,KACxCC,KAAK,GAAG;MACJC,WAAW,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,GAAG;QACTC,SAAS,EAAE,IAAI,CAACC,KAAK,CAACC;MACxB;IACF,CAAC;IAAA,KAEDC,UAAU,GAAIC,UAAU,IAAK;MAC3BC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvB,IAAI,CAACG,QAAQ,CAAC;QACZV,WAAW,EAAE;UACX,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW;UACzBC,OAAO,EAAEM;QACX;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,aAAa,GAAG,YAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,sDAAqD,EAEtD;UACEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAClB,KAAK,CAACC,WAAW,CAAC;UAC5CkB,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EACX;UACJ;QACF,CAAC,CACF;QACD,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACfC,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;MAChB;IACF,CAAC;EAAA;EAEDC,MAAM,GAAG;IACP,oBACE;MAAA,uBACE,QAAC,UAAU;QAAA,wBACT,QAAC,UAAU,CAAC,IAAI;UAAC,OAAO,EAAE,IAAI,CAACZ,aAAc;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAkB,eACrE,QAAC,IAAI,CAAC,OAAO;UACX,EAAE,EAAC,UAAU;UACb,cAAW,eAAe;UAC1B,QAAQ,EAAGa,KAAK,IAAK;YACnB,IAAI,CAAClB,UAAU,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UACrC;QAAE;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA;IACS;MAAA;MAAA;MAAA;IAAA,QACT;EAEV;AACF;AAEA,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}