{"ast":null,"code":"var _jsxFileName = \"/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/CommentsList.jsx\";\nimport React, { Component } from 'react';\nimport SingleComment from './SingleComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass CommentsList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      comments: [this.props.comments],\n      isLoading: true\n    };\n    this.fetchComments = async () => {\n      try {\n        const theBook = this.props.bookId;\n        console.log(this.props.bookId);\n        const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${theBook}`, {\n          headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc'\n          }\n        });\n        const comments = await response.json();\n        this.setState({\n          comments,\n          isLoading: false\n        });\n        console.log(\"hesy\", comments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchComments();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.props.bookId);\n  }\n  render() {\n    console.log(\"rla\", this.state.comments[0]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this) : this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(SingleComment, {\n          comment: comment\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)), console.log(this.state.comments)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default CommentsList;","map":{"version":3,"names":["React","Component","SingleComment","CommentsList","state","comments","props","isLoading","fetchComments","theBook","bookId","console","log","response","fetch","headers","Authorization","json","setState","error","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","comment","_id"],"sources":["/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/CommentsList.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport SingleComment from './SingleComment';\n\nclass CommentsList extends Component {\n  state = {\n    comments: [this.props.comments],\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.fetchComments();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    \n      console.log(this.props.bookId)\n    \n  }\n\n\n  fetchComments = async () => {\n    try {\n      const theBook = this.props.bookId\n      console.log(this.props.bookId);\n      const response = await fetch(\n        `https://striveschool-api.herokuapp.com/api/comments/${theBook}`,\n        {\n          headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc',\n          },\n        }\n      );\n      const comments = await response.json();\n\n      this.setState({ comments, isLoading: false });\n      console.log(\"hesy\", comments);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  render() {\n    console.log(\"rla\", this.state.comments[0]);\n    return (\n    <>\n{/* <div>{bookId}</div> */}\n      <div className=\"comments-list\">\n        {this.state.isLoading ? (\n          <p>Loading...</p>\n        ) : (\n          this.state.comments.map((comment) => (\n            <SingleComment key={comment._id} comment={comment} />\n          ))\n        )}\n        {console.log(this.state.comments)}\n      </div>\n      </>);\n  }\n\n}\n\nexport default CommentsList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAAA;AAE5C,MAAMC,YAAY,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KACnCG,KAAK,GAAG;MACNC,QAAQ,EAAE,CAAC,IAAI,CAACC,KAAK,CAACD,QAAQ,CAAC;MAC/BE,SAAS,EAAE;IACb,CAAC;IAAA,KAaDC,aAAa,GAAG,YAAY;MAC1B,IAAI;QACF,MAAMC,OAAO,GAAG,IAAI,CAACH,KAAK,CAACI,MAAM;QACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAACI,MAAM,CAAC;QAC9B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsDL,OAAQ,EAAC,EAChE;UACEM,OAAO,EAAE;YACPC,aAAa,EAAE;UACjB;QACF,CAAC,CACF;QACD,MAAMX,QAAQ,GAAG,MAAMQ,QAAQ,CAACI,IAAI,EAAE;QAEtC,IAAI,CAACC,QAAQ,CAAC;UAAEb,QAAQ;UAAEE,SAAS,EAAE;QAAM,CAAC,CAAC;QAC7CI,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,QAAQ,CAAC;MAC/B,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;EAAA;EA9BDC,iBAAiB,GAAG;IAClB,IAAI,CAACZ,aAAa,EAAE;EACtB;EAEAa,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IAErCZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAACI,MAAM,CAAC;EAElC;EAyBAc,MAAM,GAAG;IACPb,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACR,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,oBACA;MAAA,uBAEE;QAAK,SAAS,EAAC,eAAe;QAAA,WAC3B,IAAI,CAACD,KAAK,CAACG,SAAS,gBACnB;UAAA,UAAG;QAAU;UAAA;UAAA;UAAA;QAAA,QAAI,GAEjB,IAAI,CAACH,KAAK,CAACC,QAAQ,CAACoB,GAAG,CAAEC,OAAO,iBAC9B,QAAC,aAAa;UAAmB,OAAO,EAAEA;QAAQ,GAA9BA,OAAO,CAACC,GAAG;UAAA;UAAA;UAAA;QAAA,QAChC,CACF,EACAhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAACC,QAAQ,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B,iBACH;EACP;AAEF;AAEA,eAAeF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}