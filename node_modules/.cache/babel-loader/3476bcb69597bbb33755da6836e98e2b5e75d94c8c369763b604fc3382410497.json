{"ast":null,"code":"var _jsxFileName = \"/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/CommentsList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport SingleComment from \"./SingleComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentsList = _ref => {\n  _s();\n  let {\n    bookId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState;\n\n  // comzponentDidMount() {\n  //   this.fetchComments();\n  // }\n\n  const fetchComments = async () => {\n    try {\n      const theBook = this.props.bookId;\n      console.log(this.props.bookId);\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${theBook}`, {\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc\"\n        }\n      });\n      const comments = await response.json();\n      this.setState({\n        comments,\n        isLoading: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.bookId !== this.props.bookId) {\n      this.fetchComments();\n    }\n\n    // if (\n    //   prevState.comments !== this.state.comments\n    // ) {\n    //   this.fetchComments();\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"choose a book to read comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(SingleComment, {\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CommentsList, \"RHrI29Yaf4wTXaDPqg0VDGN+Yyo=\");\n_c = CommentsList;\nexport default CommentsList;\nvar _c;\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["useState","SingleComment","CommentsList","bookId","comments","setComments","loading","setLoading","fetchComments","theBook","props","console","log","response","fetch","headers","Authorization","json","setState","isLoading","error","componentDidUpdate","prevProps","prevState","state","map","comment","_id"],"sources":["/Users/nikolainiklaus/Documents/ec-u3-d3/src/components/CommentsList.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport SingleComment from \"./SingleComment\";\n\nconst CommentsList = ({ bookId }) => {\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState;\n\n  // comzponentDidMount() {\n  //   this.fetchComments();\n  // }\n\n  const fetchComments = async () => {\n    try {\n      const theBook = this.props.bookId;\n      console.log(this.props.bookId);\n      const response = await fetch(\n        `https://striveschool-api.herokuapp.com/api/comments/${theBook}`,\n        {\n          headers: {\n            Authorization:\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2M2M5NGQ2M2U3MzczODAwMTUzNzQ0MDIiLCJpYXQiOjE2NzUzNDIzNzksImV4cCI6MTY3NjU1MTk3OX0.T9SspPION27bTb5U75j_Ax7maF8wvgAJveRPtqnGsmc\",\n          },\n        }\n      );\n      const comments = await response.json();\n\n      this.setState({ comments, isLoading: false });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.bookId !== this.props.bookId) {\n      this.fetchComments();\n    }\n\n    // if (\n    //   prevState.comments !== this.state.comments\n    // ) {\n    //   this.fetchComments();\n    // }\n  };\n\n  return (\n    <>\n      {/* <div>{bookId}</div> */}\n      <div className=\"comments-list\">\n        {this.state.isLoading ? (\n          <p>choose a book to read comments</p>\n        ) : (\n          this.state.comments.map((comment) => (\n            <SingleComment key={comment._id} comment={comment} />\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CommentsList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAAA;AAE5C,MAAMC,YAAY,GAAG,QAAgB;EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ;;EAEtC;EACA;EACA;;EAEA,MAAMQ,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,OAAO,GAAG,IAAI,CAACC,KAAK,CAACP,MAAM;MACjCQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAACP,MAAM,CAAC;MAC9B,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsDL,OAAQ,EAAC,EAChE;QACEM,OAAO,EAAE;UACPC,aAAa,EACX;QACJ;MACF,CAAC,CACF;MACD,MAAMZ,QAAQ,GAAG,MAAMS,QAAQ,CAACI,IAAI,EAAE;MAEtC,IAAI,CAACC,QAAQ,CAAC;QAAEd,QAAQ;QAAEe,SAAS,EAAE;MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;IACnD,IAAID,SAAS,CAACnB,MAAM,KAAK,IAAI,CAACO,KAAK,CAACP,MAAM,EAAE;MAC1C,IAAI,CAACK,aAAa,EAAE;IACtB;;IAEA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACE;IAAA,uBAEE;MAAK,SAAS,EAAC,eAAe;MAAA,UAC3B,IAAI,CAACgB,KAAK,CAACL,SAAS,gBACnB;QAAA,UAAG;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAI,GAErC,IAAI,CAACK,KAAK,CAACpB,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBAC9B,QAAC,aAAa;QAAmB,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAChC;IACF;MAAA;MAAA;MAAA;IAAA;EACG,iBACL;AAEP,CAAC;AAAC,GAvDIzB,YAAY;AAAA,KAAZA,YAAY;AAyDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}